plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

version = parent.name + "-" + property('mod.version') + "+" + stonecutter.current.project
group = project.maven_group

base {
	archivesName = archives_base_name
}

repositories {
	maven { url 'https://maven.nucleoid.xyz' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${stonecutter.current.project}"
	mappings "net.fabricmc:yarn:${property('deps.yarn_mappings')}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"
	modImplementation include("eu.pb4:sgui:${property('deps.sgui')}")
}

processResources {
	def properties = [
			"version" : version,
			"targetVersion" : project.property('mod.mc_version'),
			"minecraftVersion" : stonecutter.current.version,
			"fabricVersion" : project.property('deps.fabric_loader'),
	]

	filesMatching("fabric.mod.json") {
		expand properties
	}
	inputs.properties(properties)
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	def java = stonecutter.eval(stonecutter.current.version, ">=1.20.5")
			? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
	sourceCompatibility = java
	targetCompatibility = java
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishMods {
	displayName = "ClickVillagers ${property('mod.version')} for Fabric"
	file = tasks.remapJar.archiveFile
	version = project.version
	changelog = rootProject.file("CHANGELOG.md").text
	type = STABLE
	modLoaders.add("fabric")
	def mcVersions = property('mod.target_mc_versions').toString().split(',')
	modrinth {
		accessToken = System.getenv("MODRINTH_TOKEN")
		projectId = "BITzwT7B"
		requires("fabric-api")
		minecraftVersions.addAll(mcVersions)
	}
	curseforge {
		accessToken = System.getenv("CURSEFORGE_TOKEN")
		projectId = "1162587"
		clientRequired = false
		serverRequired = true
		requires("fabric-api")
		minecraftVersions.addAll(mcVersions)
	}
}

loom {
	runConfigs.all {
		ideConfigGenerated true // Run configurations are not created for subprojects by default
		runDir "../../run" // Use a shared run folder and create separate worlds
	}
}